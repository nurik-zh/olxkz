package routes

import (
	"github.com/gin-gonic/gin"
	"net/http"
	"olxkz/config"
	"olxkz/middleware" // –µ–≥–µ—Ä middleware –±–∞—Ä –±–æ–ª—Å–∞
	"olxkz/models"
)

// –ë–∞—Ä–ª—ã“õ user —Ä–æ—É—Ç—Ç–∞—Ä—ã–Ω —Ç—ñ—Ä–∫–µ—É
func RegisterUserRoutes(r *gin.Engine) {
	users := r.Group("/users")
	users.Use(middleware.AuthMiddleware()) // üîê “ö–æ—Ä“ì–∞–ª“ì–∞–Ω –º–∞—Ä—à—Ä—É—Ç
	{
		users.GET("", GetAllUsers)
	}
}

// –ë–∞—Ä–ª—ã“õ “õ–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä–¥—ã –∞–ª—É
func GetAllUsers(c *gin.Context) {
	var users []models.User

	// DB —Å“±—Ä–∞–Ω—ã—Å
	if err := config.DB.Find(&users).Error; err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{"error": "“ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã"})
		return
	}

	// –ü–∞—Ä–æ–ª—å–¥—ñ —à—ã“ì–∞—Ä—ã–ø —Ç–∞—Å—Ç–∞–π–º—ã–∑ (“õ–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫ “Ø—à—ñ–Ω)
	for i := range users {
		users[i].Password = ""
	}

	c.JSON(http.StatusOK, users)
}
